rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper function to check authentication
    function isUserAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function for file size (e.g., 5MB)
    function isWithinSizeLimit(maxSizeInMB) {
      return request.resource.size < maxSizeInMB * 1024 * 1024;
    }
    
    // Public read access for all files
    match /{allPaths=**} {
      allow read: if true;
    }

    // Profile pictures
    match /profile-pictures/{fileName} {
      allow write: if isUserAuthenticated() && isWithinSizeLimit(5);
    }
    
    // Event banners
    match /event-banners/{fileName} {
      allow write: if isUserAuthenticated() && isWithinSizeLimit(10);
    }
    
    // Community logos and banners
    match /community-logos/{fileName} {
        allow write: if isUserAuthenticated() && isWithinSizeLimit(5);
    }
    match /community-banners/{fileName} {
        allow write: if isUserAuthenticated() && isWithinSizeLimit(10);
    }
    
    // Deal images
    match /deal-images/{fileName} {
        allow write: if isUserAuthenticated() && isWithinSizeLimit(10);
    }
    
    // Sponsor logos
    match /sponsor-logos/{fileName} {
        allow write: if isUserAuthenticated() && isWithinSizeLimit(5);
    }
    
     // Business images
    match /business-images/{fileName} {
        allow write: if isUserAuthenticated() && isWithinSizeLimit(10);
    }
  }
}

rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {

    // Helper function to check if a user is the founder of a community.
    function isCommunityFounder(communityId) {
      return get(/databases/$(database)/documents/communities/$(communityId)).data.founderUid == request.auth.uid;
    }

    // =====================================================================
    // Profile Pictures
    // =====================================================================
    // Users can only write to their own profile picture path.
    // The file size must be less than 5MB.
    match /profile-pictures/{userId}/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId
                   && request.resource.size < 5 * 1024 * 1024;
    }

    // =====================================================================
    // Community Logos
    // =====================================================================
    // Only the community founder can upload a logo.
    match /community-logos/{communityId}/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && isCommunityFounder(communityId)
                   && request.resource.size < 5 * 1024 * 1024;
    }
    
    // =====================================================================
    // Community Banners
    // =====================================================================
    // Only the community founder can upload a banner.
    match /community-banners/{communityId}/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && isCommunityFounder(communityId)
                   && request.resource.size < 5 * 1024 * 1024;
    }
    
    // =====================================================================
    // Event Banners
    // =====================================================================
    // Any authenticated user can upload an event banner, as it will be linked
    // to an event they are creating. The Firestore rules will handle event
    // creation authorization.
    match /event-banners/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null
                   && request.resource.size < 5 * 1024 * 1024;
    }
    
    // =====================================================================
    // Deal Images
    // =====================================================================
    // Any authenticated user can upload a deal image.
    match /deal-images/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null
                   && request.resource.size < 5 * 1024 * 1024;
    }
    
    // Deny all other writes by default
    match /{allPaths=**} {
        allow read: if false; // Can be true if you want other files to be public
        allow write: if false;
    }
  }
}

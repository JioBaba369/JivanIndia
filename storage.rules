rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Default deny all
    match /{allPaths=**} {
      allow read, write: if false;
    }

    // Allow public read access to all image folders
    match /profile-pictures/{fileName} {
      allow read: if true;
      allow write: if isAuthenticated() && request.resource.size < 5 * 1024 * 1024; // Max 5MB
    }
    
    match /event-banners/{fileName} {
      allow read: if true;
      allow write: if isAuthenticated() && request.resource.size < 5 * 1024 * 1024; // Max 5MB
    }

    match /community-logos/{fileName} {
      allow read: if true;
      allow write: if isAuthenticated() && request.resource.size < 5 * 1024 * 1024; // Max 5MB
    }
    
    match /community-banners/{fileName} {
      allow read: if true;
      allow write: if isAuthenticated() && request.resource.size < 5 * 1024 * 1024; // Max 5MB
    }

    match /business-images/{fileName} {
      allow read: if true;
      allow write: if isAuthenticated() && request.resource.size < 5 * 1024 * 1024; // Max 5MB
    }
    
    match /sponsor-logos/{fileName} {
      allow read: if true;
      allow write: if isAuthenticated() && request.resource.size < 5 * 1024 * 1024; // Max 5MB
    }

    match /deal-images/{fileName} {
      allow read: if true;
      allow write: if isAuthenticated() && request.resource.size < 5 * 1024 * 1024; // Max 5MB
    }
  }
}
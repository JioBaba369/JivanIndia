
rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Allow public read access to all files by default.
    // This is common for profile pictures, event banners, etc.
    match /{allPaths=**} {
      allow read: if true;
    }

    // Restrict write access. Only authenticated users can upload files.
    // Further restrictions can be added based on path.
    match /{folder}/{fileName} {
      allow write: if isAuthenticated();
    }
    
    // Example of more specific rules:
    // Only allow users to upload to their own folder within 'user-media'
    // match /user-media/{userId}/{allPaths=**} {
    //   allow write: if request.auth != null && request.auth.uid == userId;
    // }
    
    // Allow authenticated users to upload to specific folders like event banners
    // or community logos. You can add more checks here, e.g., for file size or type.
    match /event-banners/{fileName} {
      allow write: if isAuthenticated() && request.resource.size < 5 * 1024 * 1024 // 5MB limit
                      && request.resource.contentType.matches('image/.*');
    }
    
    match /community-logos/{fileName} {
       allow write: if isAuthenticated() && request.resource.size < 2 * 1024 * 1024 // 2MB limit
                      && request.resource.contentType.matches('image/.*');
    }

     match /community-banners/{fileName} {
       allow write: if isAuthenticated() && request.resource.size < 5 * 1024 * 1024 // 5MB limit
                      && request.resource.contentType.matches('image/.*');
    }

     match /sponsor-logos/{fileName} {
       allow write: if isAuthenticated() && request.resource.size < 2 * 1024 * 1024 // 2MB limit
                      && request.resource.contentType.matches('image/.*');
    }

    match /profile-images/{fileName} {
       allow write: if isAuthenticated() && request.resource.size < 2 * 1024 * 1024 // 2MB limit
                      && request.resource.contentType.matches('image/.*');
    }

     match /business-images/{fileName} {
       allow write: if isAuthenticated() && request.resource.size < 5 * 1024 * 1024 // 5MB limit
                      && request.resource.contentType.matches('image/.*');
    }
  }
}

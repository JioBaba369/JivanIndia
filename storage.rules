
rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
  
    // Helper function to check file size (e.g., max 10MB)
    function isImageSizeValid(maxSizeInMB) {
      return request.resource.size < maxSizeInMB * 1024 * 1024;
    }

    // Helper function to check image type
    function isImageTypeValid() {
      return request.resource.contentType.matches('image/jpeg') ||
             request.resource.contentType.matches('image/png') ||
             request.resource.contentType.matches('image/webp');
    }

    // Default deny all reads and writes
    match /{allPaths=**} {
      allow read, write: if false;
    }

    // Logged-in users can read any image
    match /{folder}/{imageId} {
      allow read: if request.auth != null;
    }

    // Rules for Profile Pictures
    match /profile-pictures/{userId}/{fileName} {
      allow write: if request.auth != null && request.auth.uid == userId
                    && isImageSizeValid(5) && isImageTypeValid();
    }
    
    // Rules for various content folders
    // Only authenticated users can upload. More specific rules could be added if needed
    // (e.g., only community managers can upload to community folders)
    match /community-logos/{fileName} {
       allow write: if request.auth != null && isImageSizeValid(5) && isImageTypeValid();
    }
    match /community-banners/{fileName} {
       allow write: if request.auth != null && isImageSizeValid(10) && isImageTypeValid();
    }
    match /event-banners/{fileName} {
       allow write: if request.auth != null && isImageSizeValid(10) && isImageTypeValid();
    }
     match /deal-images/{fileName} {
       allow write: if request.auth != null && isImageSizeValid(10) && isImageTypeValid();
    }
    match /business-images/{fileName} {
       allow write: if request.auth != null && isImageSizeValid(10) && isImageTypeValid();
    }
    
    // Rules for Admins
    match /team-avatars/{fileName} {
       allow write: if request.auth != null && exists(/databases/(default)/documents/about/singleton) && request.auth.uid in get(/databases/(default)/documents/about/singleton).data.adminUids;
    }
     match /sponsor-logos/{fileName} {
       allow write: if request.auth != null && exists(/databases/(default)/documents/about/singleton) && request.auth.uid in get(/databases/(default)/documents/about/singleton).data.adminUids;
    }
    match /branding/{fileName} {
       allow write: if request.auth != null && exists(/databases/(default)/documents/about/singleton) && request.auth.uid in get(/databases/(default)/documents/about/singleton).data.adminUids;
    }
  }
}

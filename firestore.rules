rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // =================================================================
    // Helper Functions
    // =================================================================
    
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isAdmin() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    function isCommunityFounder(communityId) {
       return isAuthenticated() && get(/databases/$(database)/documents/communities/$(communityId)).data.founderUid == request.auth.uid;
    }
    
    function isEventSubmitter(eventId) {
       return isAuthenticated() && get(/databases/$(database)/documents/events/$(eventId)).data.submittedByUid == request.auth.uid;
    }

    // =================================================================
    // Users Collection
    // =================================================================
    match /users/{userId} {
      // Allow public read for profile pages
      allow read: if true;
      
      // Allow user to create their own account document on signup
      allow create: if isOwner(userId);
      
      // Allow user to update their own data
      allow update: if isOwner(userId);
      
      // Disallow deleting user accounts from the client
      allow delete: if false;
    }

    // =================================================================
    // Communities Collection
    // =================================================================
    match /communities/{communityId} {
      // Allow public read for community lists and detail pages
      allow read: if true;

      // Allow any logged-in user to create a community
      allow create: if isAuthenticated();

      // Allow founder or an admin to update
      allow update: if isCommunityFounder(communityId) || isAdmin();
      
      // Allow founder or an admin to delete
      allow delete: if isCommunityFounder(communityId) || isAdmin();
    }
    
    // =================================================================
    // Events Collection
    // =================================================================
    match /events/{eventId} {
      // Allow public read for event lists and detail pages
      allow read: if true;

      // Allow any logged-in user to create an event
      allow create: if isAuthenticated();
      
      // Allow the user who submitted it or an admin to update
      allow update: if isEventSubmitter(eventId) || isAdmin();
      
      // Allow the user who submitted it or an admin to delete
      allow delete: if isEventSubmitter(eventId) || isAdmin();
    }
    
    // =================================================================
    // About Collection
    // =================================================================
    match /about/singleton {
      // Allow public read for the About Us page
      allow read: if true;
      
      // Only admins can write/update the about content
      allow write: if isAdmin();
    }

    // =================================================================
    // Default Deny
    // Catch-all rule to deny access to any other path
    // =================================================================
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
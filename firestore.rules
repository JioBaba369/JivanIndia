rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if the requester is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/about/singleton).data.adminUids.has(request.auth.uid);
    }
    
    // Default deny all access to prevent accidental data exposure
    match /{document=**} {
      allow read, write: if false;
    }

    // USERS
    // - Admins can read the full list of users for management.
    // - Authenticated users can read any public user profile.
    // - A user can only write to their own document.
    match /users/{userId} {
      allow read: if isAdmin() || request.auth != null;
      allow write: if request.auth.uid == userId;
    }

    // ABOUT
    // - The 'about' document is publicly readable.
    // - Only admins can update the 'about' document.
    match /about/singleton {
        allow read: if true;
        allow write: if isAdmin();
    }

    // EVENTS
    // - Approved events are publicly readable.
    // - Authenticated users can create new events.
    // - Only the original submitter or an admin can update an event.
    match /events/{eventId} {
      allow read: if resource.data.status == 'Approved';
      allow create: if request.auth != null;
      allow update: if request.auth.uid == resource.data.submittedByUid || isAdmin();
    }
    
    // COMMUNITIES
    // - All communities are publicly readable.
    // - Authenticated users can create new communities.
    // - Only the founder or an admin can update or delete a community.
    match /communities/{communityId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth.uid == resource.data.founderUid || isAdmin();
    }
    
    // DEALS
    // - All deals are publicly readable.
    // - Authenticated users can create new deals.
    // - Only the original submitter or an admin can update a deal.
    match /deals/{dealId} {
        allow read: if true;
        allow create: if request.auth != null;
        allow update: if request.auth.uid == resource.data.submittedByUid || isAdmin();
    }
    
    // All other collections are publicly readable as a fallback.
    // This includes movies, jobs, businesses, and sponsors.
    // Creation/modification for these would be admin-only via the app logic.
    match /{collection}/{docId} {
      allow read: if true;
    }

  }
}

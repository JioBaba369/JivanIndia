
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // AUTH: Users can only read/write their own data.
    match /users/{userId} {
      allow read, write: if isSignedIn() && isOwner(userId);
    }
    
    // Allow signed-in users to read reports. The admin page is already protected.
    match /reports/{reportId} {
      allow read, create: if isSignedIn();
      allow update, delete: if false; // Only functions can manage reports for now
    }
    
    match /contacts/{contactId} {
        allow create: if true;
        allow read, write, delete: if false;
    }

    // PUBLIC: Most collections are world-readable.
    // Writes are generally restricted to authenticated users, often with
    // specific roles, which is handled in application logic (security by obscurity).
    // For a production app, these rules should be more granular.
    match /{document=**} {
      allow read: if true;
      allow write: if isSignedIn();
    }
  }
}


rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Default deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }
    
    // Users: Can read/write their own data, but not others'
    match /users/{userId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
    }

    // Public Collections: Anyone can read, only authenticated can create
    match /communities/{communityId} {
      allow read: if true;
      allow create: if request.auth != null;
      // Only the founder can update/delete
      allow update, delete: if request.auth != null && resource.data.founderUid == request.auth.uid;
    }
    
    match /events/{eventId} {
      allow read: if true;
      allow create: if request.auth != null;
       // Only the original submitter or an admin can update/delete
      allow update, delete: if request.auth != null && resource.data.submittedByUid == request.auth.uid;
    }
    
    // Read-only public collections
    match /movies/{movieId} {
      allow read: if true;
    }
    
    match /deals/{dealId} {
       allow read: if true;
       allow create: if request.auth != null;
    }
    
     match /careers/{jobId} {
       allow read: if true;
       allow create: if request.auth != null;
    }

    // Add other collections as needed (e.g., providers, sponsors)
    // with similar read/write rules.
  }
}

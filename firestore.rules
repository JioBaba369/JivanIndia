
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isAdmin() {
      return get(/databases/$(database)/documents/about/singleton).data.adminUids.has(request.auth.uid);
    }
    
    function isCommunityFounder(communityId) {
      return get(/databases/$(database)/documents/communities/$(communityId)).data.founderUid == request.auth.uid;
    }
    
    function isCommunityManager(communityId) {
      let managers = get(/databases/$(database)/documents/communities/$(communityId)).data.managers;
      return request.auth.uid in managers;
    }

    function isAffiliatedWith(orgId) {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.affiliation.orgId == orgId;
    }
    
    function isOwner(userId) {
        return request.auth.uid == userId;
    }

    // Public Collections (Read-Only for most users)
    match /festivals/{festivalId} {
      allow read: if true;
      allow write: if false; // Managed via code updates
    }
    
    match /countries/{countryId} {
      allow read: if true;
      allow write: if false; // Managed via code updates
    }

    match /indiaLocations/{locationId} {
        allow read: if true;
        allow write: if false;
    }
    
    // About Page (Singleton Document)
    match /about/singleton {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Users
    match /users/{userId} {
      allow read: if true;
      allow create: if request.auth.uid == userId;
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }
    
    // Communities
    match /communities/{communityId} {
      allow read: if true;
      allow create: if isOwner(request.resource.data.founderUid);
      allow update: if isCommunityFounder(communityId) || isCommunityManager(communityId) || isAdmin();
      allow delete: if isCommunityFounder(communityId) || isAdmin();
    }

    // Events
    match /events/{eventId} {
      allow read: if true;
      allow create: if isAffiliatedWith(request.resource.data.organizerId);
      allow update: if isAffiliatedWith(resource.data.organizerId) || isAdmin();
      allow delete: if isAffiliatedWith(resource.data.organizerId) || isAdmin();
    }
    
    // Businesses
    match /businesses/{businessId} {
      allow read: if resource.data.isVerified == true || isOwner(resource.data.ownerId) || isAdmin();
      allow create: if request.auth != null;
      allow update: if isOwner(resource.data.ownerId) || isAdmin();
      allow delete: if isOwner(resource.data.ownerId) || isAdmin();
    }
    
    // Deals
    match /deals/{dealId} {
        allow read: if true;
        allow create: if isAffiliatedWith(request.resource.data.communityId) || isOwner(get(/databases/$(database)/documents/businesses/$(request.resource.data.businessId)).data.ownerId);
        allow update, delete: if isAffiliatedWith(resource.data.communityId) || isOwner(get(/databases/$(database)/documents/businesses/$(resource.data.businessId)).data.ownerId) || isAdmin();
    }

    // Movies, Jobs, Sponsors (Admin-only write access)
    match /movies/{movieId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /jobs/{jobId} {
      allow read: if true;
      allow create: if isAffiliatedWith(request.resource.data.companyId);
      allow update, delete: if isAffiliatedWith(resource.data.companyId) || isAdmin();
    }

    match /sponsors/{sponsorId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Private/Protected Collections
    match /notifications/{notificationId} {
      allow read, update: if isOwner(resource.data.userId);
      allow create: if request.auth != null; // Server-side logic determines who can create
      allow delete: if false;
    }
    
    match /reports/{reportId} {
      allow create: if request.auth != null;
      allow read, update: if isAdmin();
      allow delete: if false;
    }

    match /contacts/{contactId} {
        allow create: if true;
        allow read, update, delete: if isAdmin();
    }

  }
}


rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // =================================
    // Helper Functions
    // =================================
    
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Check if the user is the founder of a specific community
    function isCommunityFounder(communityId) {
      return isSignedIn() && get(/databases/$(database)/documents/communities/$(communityId)).data.founderUid == request.auth.uid;
    }

    // Check if the user who submitted an event is the one trying to update it
    function isEventSubmitter(eventResource) {
      return isSignedIn() && eventResource.data.submittedByUid == request.auth.uid;
    }

    // =================================
    // Collection Rules
    // =================================

    // USERS
    // Users can be read by anyone (for public profiles).
    // Users can only be created if the UID matches.
    // Users can only update their own document, and cannot make themselves an admin.
    match /users/{userId} {
      allow read: if true;
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) && request.resource.data.isAdmin == resource.data.isAdmin;
    }

    // COMMUNITIES
    // Communities can be read by anyone.
    // They can only be created by signed-in users.
    // They can only be updated by their founder or an admin.
    match /communities/{communityId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update: if isAdmin() || isCommunityFounder(communityId);
    }
    
    // EVENTS
    // Events can be read by anyone.
    // They can only be created by signed-in users.
    // They can only be updated by the user who submitted them or an admin.
    match /events/{eventId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update: if isAdmin() || isEventSubmitter(resource);
    }
    
    // ABOUT
    // The about page content is public, but can only be written to by an admin.
    match /about/singleton {
        allow read: if true;
        allow write: if isAdmin();
    }
  }
}

rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Default deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }
    
    // Users:
    // - Authenticated users can read any profile.
    // - A user can only write to their own profile.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }
    
    // About Page:
    // - Anyone can read the about page content.
    // - Only an admin can write to the about page content.
    match /about/singleton {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.admin == true;
    }

    // Communities, Events, Businesses, Sponsors, Movies, Deals, Jobs, Festivals
    // These collections should be publicly readable.
    match /communities/{communityId} {
      allow read: if true;
      allow create: if request.auth != null; // Must be logged in to create
      // Allow update/delete only by the founder or a manager of that community.
      allow update, delete: if request.auth != null && (
        resource.data.founderUid == request.auth.uid ||
        resource.data.managers.hasAny(
          'uid', [request.auth.uid]
        )
      );
    }

    match /events/{eventId} {
        allow read: if true;
        allow create: if request.auth != null; // Must be logged in to create
        allow update, delete: if request.auth != null && (
            resource.data.submittedByUid == request.auth.uid ||
            request.auth.token.admin == true
        );
    }

    match /businesses/{businessId} {
      allow read: if true;
      allow create: if request.auth != null; // Must be logged in to create
      allow update, delete: if request.auth != null && (
        request.auth.token.admin == true ||
        resource.data.ownerId == request.auth.uid
      );
    }
    
    match /sponsors/{sponsorId} {
        allow read: if true;
        allow create, update, delete: if request.auth != null && request.auth.token.admin == true;
    }

    match /movies/{movieId} {
        allow read: if true;
        allow create, update, delete: if request.auth != null && request.auth.token.admin == true;
    }

    match /deals/{dealId} {
        allow read: if true;
        allow create: if request.auth != null;
        allow update, delete: if request.auth != null && (
          resource.data.submittedByUid == request.auth.uid ||
          request.auth.token.admin == true
        );
    }

    match /jobs/{jobId} {
        allow read: if true;
        allow create: if request.auth != null;
        allow update, delete: if request.auth != null && (
          resource.data.submittedByUid == request.auth.uid ||
          request.auth.token.admin == true
        );
    }
    
    // Contact form submissions
    match /contacts/{contactId} {
        allow create: if true;
        allow read, update, delete: if request.auth != null && request.auth.token.admin == true;
    }
    
    // Reports
    match /reports/{reportId} {
      allow create: if request.auth != null; // Must be logged in to report
      allow read, update: if request.auth != null && request.auth.token.admin == true; // Only admins can read/update
    }

    // Notifications
    match /notifications/{notificationId} {
      allow read, update: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow create: if request.auth != null; // Can be created by server-side logic or other users for a target user
    }
  }
}

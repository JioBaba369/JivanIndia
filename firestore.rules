
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      // Public profiles are readable by anyone.
      allow read;
      // Only the authenticated user can write to their own profile.
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    match /events/{eventId} {
      // Events are publicly readable.
      allow read;
      // Any authenticated user can create an event.
      allow create: if request.auth != null;
      // Only the user who submitted the event or an admin can update/delete it.
      allow update, delete: if request.auth != null && (request.auth.uid == resource.data.submittedByUid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true);
    }
    match /communities/{communityId} {
        // Communities are publicly readable.
        allow read;
        // Any authenticated user can create a community.
        allow create: if request.auth != null;
        // Only the founder of the community or an admin can update/delete it.
        allow update, delete: if request.auth != null && (request.auth.uid == resource.data.founderUid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true);
    }
     match /about/singleton {
      // The about page content is publicly readable.
      allow read;
      // Only an admin can write to the about page.
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
  }
}

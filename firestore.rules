rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper Functions
    function isAdmin() {
      return request.auth.uid in get(/databases/$(database)/documents/about/singleton).data.adminUids;
    }
    
    function isOwner(ownerId) {
      return request.auth.uid == ownerId;
    }

    function isCommunityManager(communityId) {
      let community = get(/databases/$(database)/documents/communities/$(communityId)).data;
      return request.auth.uid == community.founderUid || request.auth.uid in community.managers.map(m => m.uid);
    }

    // Rules for each collection
    match /users/{userId} {
      allow read: if true;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId;
    }

    match /about/singleton {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /communities/{communityId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update: if isCommunityManager(communityId);
      allow delete: if isOwner(get(/databases/$(database)/documents/communities/$(communityId)).data.founderUid);
    }
    
    match /events/{eventId} {
      allow read: if resource.data.status == 'Approved';
      allow list: if true;
      allow create: if request.auth != null;
      allow update: if isCommunityManager(request.resource.data.organizerId) || isAdmin();
      allow delete: if isCommunityManager(resource.data.organizerId) || isAdmin();
    }
    
    match /businesses/{businessId} {
      allow read: if resource.data.isVerified == true || isOwner(resource.data.ownerId) || isAdmin();
      allow list: if true;
      allow create: if request.auth != null;
      allow update: if isOwner(resource.data.ownerId) || isAdmin();
      allow delete: if isOwner(resource.data.ownerId) || isAdmin();
    }

    match /sponsors/{sponsorId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }

    match /movies/{movieId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }

    match /deals/{dealId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if isOwner(resource.data.submittedByUid) || isAdmin();
    }

    match /jobs/{jobId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if isOwner(resource.data.submittedByUid) || isAdmin();
    }

    match /notifications/{notificationId} {
      allow read, update: if isOwner(resource.data.userId);
      allow create: if true; // Notifications are created by the system/backend logic
    }
    
    match /contacts/{contactId} {
      allow read: if isAdmin();
      allow create: if true; // Anyone can send a message
    }
    
    match /reports/{reportId} {
        allow read, write: if isAdmin();
    }
  }
}

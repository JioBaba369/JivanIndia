rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper functions
    function isAuth() {
      return request.auth != null;
    }
    function isOwner(uid) {
      return isAuth() && request.auth.uid == uid;
    }
    function isAdmin() {
      return isAuth() && get(/databases/$(database)/documents/about/singleton).data.adminUids.hasAny([request.auth.uid]);
    }
    function isAffiliated(communityId) {
        return isAuth() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.affiliation.orgId == communityId;
    }

    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }

    // `about` collection (for admin UIDs, etc.)
    match /about/singleton {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // `users` collection
    match /users/{userId} {
      // Anyone can read a user's public profile
      allow read: if true;
      // Only the owner can write to their own document
      allow write: if isOwner(userId);
    }
    
    // `communities` collection
    match /communities/{communityId} {
      allow read: if true;
      // Only authenticated users can create
      allow create: if isAuth();
      // Only the founder or an admin can update
      allow update: if (isOwner(resource.data.founderUid) || isAdmin());
      // Only the founder or an admin can delete
      allow delete: if (isOwner(resource.data.founderUid) || isAdmin());
    }

    // `events` collection
    match /events/{eventId} {
      allow read: if true;
      allow create: if isAuth() && isAffiliated(request.resource.data.organizerId);
      allow update: if isAdmin(); // Only admins can change status
      allow delete: if isAdmin();
    }
    
    // `deals` collection
    match /deals/{dealId} {
        allow read: if true;
        allow create: if isAuth() && isAffiliated(request.resource.data.businessId);
        allow update, delete: if isAdmin();
    }

    // `jobs` collection
    match /jobs/{jobId} {
        allow read: if true;
        allow create: if isAuth() && isAffiliated(request.resource.data.companyId);
        allow update, delete: if isAdmin();
    }
    
    // Read-only collections (managed externally or by admin)
    match /movies/{movieId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }
    
    match /sponsors/{sponsorId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }
    
    match /businesses/{businessId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }

    // Contact form submissions
    match /contacts/{contactId} {
      allow create: if true; // Anyone can submit the form
      allow read, update, delete: if isAdmin(); // Only admins can manage submissions
    }
  }
}

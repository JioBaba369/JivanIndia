rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check for Admin role from a user's custom claims
    function isAdmin() {
      return request.auth.token.admin == true;
    }
    
    // Helper function to check if the user is the owner of a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Default deny all reads/writes
    match /{document=**} {
      allow read, write: if false;
    }
    
    // Publicly readable collections
    match /events/{eventId} {
      allow read: if true;
      allow create: if request.auth != null && request.resource.data.submittedByUid == request.auth.uid;
      allow update, delete: if request.auth != null && (isAdmin() || resource.data.submittedByUid == request.auth.uid);
    }

    match /communities/{communityId} {
      allow read: if true;
      allow create: if request.auth != null && request.resource.data.founderUid == request.auth.uid;
      allow update: if request.auth != null && (isAdmin() || request.auth.uid in resource.data.managerUids);
      allow delete: if request.auth != null && (isAdmin() || resource.data.founderUid == request.auth.uid);
    }
    
    match /businesses/{businessId} {
      allow read: if true;
      allow create: if request.auth != null && isAdmin();
      allow update, delete: if request.auth != null && isAdmin();
    }
    
    match /movies/{movieId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null && isAdmin();
    }

    match /deals/{dealId} {
      allow read: if true;
      allow create: if request.auth != null && request.resource.data.submittedByUid == request.auth.uid;
      allow update, delete: if request.auth != null && (isAdmin() || resource.data.submittedByUid == request.auth.uid);
    }
    
    match /careers/{jobId} {
      allow read: if true;
      allow create: if request.auth != null && request.resource.data.submittedByUid == request.auth.uid;
      allow update, delete: if request.auth != null && (isAdmin() || resource.data.submittedByUid == request.auth.uid);
    }
    
    match /sponsors/{sponsorId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null && isAdmin();
    }

    match /festivals/{festivalId} {
        allow read: if true;
        allow create, update, delete: if false; // Managed via code for now
    }
    
    // User profiles
    match /users/{userId} {
      allow read: if true;
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) && request.resource.data.keys().diff(['roles']).size() == 0;
    }
    
    // Site configuration
    match /about/{docId} {
        allow read: if true;
        allow write: if request.auth != null && isAdmin();
    }
    
    // Reports
    match /reports/{reportId} {
      allow create: if request.auth != null && request.resource.data.reportedByUid == request.auth.uid;
      allow read, update: if request.auth != null && isAdmin();
    }
    
    // Notifications
    match /notifications/{notificationId} {
        allow read, update: if request.auth != null && resource.data.userId == request.auth.uid;
        allow create: if request.auth != null && isAdmin(); // Allow admins to create notifications for now
    }
    
    // Contacts
    match /contacts/{contactId} {
      allow create: if true;
      allow read, update, delete: if request.auth != null && isAdmin();
    }
  }
}

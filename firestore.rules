
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if a user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }
    
    // Helper function to check if the user is an admin
    function isAdmin() {
      // Check if the user's UID is in the admin list within the 'about' document
      return isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/about/singleton).data.adminUids;
    }

    // Helper function to check if the user is the owner of a document
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    // Helper function to check if a user is an affiliated community manager
    function isCommunityManager(communityId) {
       return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.affiliation.orgId == communityId;
    }

    // Public read, restricted write
    match /events/{eventId} {
      allow read: if true;
      allow create: if isCommunityManager(request.resource.data.organizerId);
      allow update: if isAdmin(); // Only admins can approve/feature events
      allow delete: if isAdmin();
    }
    
    match /communities/{communityId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update: if isOwner(resource.data.founderUid) || isAdmin();
      allow delete: if isOwner(resource.data.founderUid) || isAdmin();
    }

    match /users/{userId} {
      allow read: if true;
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) || isAdmin(); // User can update their own profile, or admin
      allow delete: if isAdmin(); 
    }
    
    match /deals/{dealId} {
      allow read: if true;
      allow create: if isCommunityManager(request.resource.data.businessId);
      allow update, delete: if isAdmin();
    }
    
    match /jobs/{jobId} {
      allow read: if true;
      allow create: if isCommunityManager(request.resource.data.companyId);
      allow update, delete: if isAdmin();
    }
    
    match /sponsors/{sponsorId} {
        allow read: if true;
        allow create, update, delete: if isAdmin();
    }
    
    match /businesses/{businessId} {
        allow read: if true;
        allow create, update, delete: if isAdmin();
    }
    
    match /movies/{movieId} {
        allow read: if true;
        allow create, update, delete: if isAdmin(); // Only admins can add movies
    }

    // Public read-only
    match /festivals/{festivalId} {
      allow read: if true;
      allow write: if false; // Data is static, no writes allowed from client
    }
    
    // Contact messages can be created by anyone, but not read publicly
    match /contacts/{contactId} {
      allow read: if isAdmin();
      allow create: if true;
      allow update, delete: if false;
    }
    
    // Notifications are private to each user
    match /notifications/{notificationId} {
      allow read, update: if isOwner(resource.data.userId);
      allow create: if isSignedIn(); // Can be created by system/other users
      allow delete: if isOwner(resource.data.userId);
    }

    // Reports can be created by any signed-in user, but only read/updated by admins
    match /reports/{reportId} {
        allow create: if isSignedIn();
        allow read, update, delete: if isAdmin();
    }
    
    // About document (site settings) is public-read, but write is admin-only
    match /about/singleton {
        allow read: if true;
        allow write: if isAdmin();
    }
    
  }
}
